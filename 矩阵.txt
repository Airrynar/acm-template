#include<bits/stdc++.h>
using namespace std;
//#define int long long
const int N=2e5+10;
const int mod=998244353;
int n,m,q;
int factorial(int x){
    int res=1;for(int i=2;i<=x;i++)res*=i;return res;
}
vector<int>dx(vector<int>a,int x){
    vector<int>v;
    int fac=factorial(x),i;
    for(i=x;i<a.size();i++){
        v.push_back(a[i]*fac);
        fac=fac/(i+1-x)*(i+1);
    }
    for (i=0;i<x;i++)v.push_back(0);//保持向量的维数一致
    return v;
}
vector<int>a;//多项式形式
template<typename T>
class Matrix{
    public:
        int n,m;
        vector<vector<T>>a;
    public:
        Matrix(int n,int m){//n*m的矩阵
            vector<T>v;
            int i;this->n=n;this->m=m;
            for (i=0;i<m;i++)v.push_back(0);
            for (i=0;i<n;i++)a.push_back(v);
        }
        Matrix(int n){//单位矩阵
            vector<T>v;
            int i;this->n=n;this->m=n;
            for (i=0;i<m;i++)v.push_back(0);
            for (i=0;i<n;i++){
                v[i]=1;a.push_back(v);v[i]=0;
            }
        }
        void clear(){
            int i,j;
            for (i=0;i<n;i++)for (j=0;j<m;j++)a[i][j]=0;
        }
        auto &operator [](int x){
            return a[x];
        }
        Matrix<T> operator*(Matrix<T> &b)const{
            int i,j,k;
            Matrix<T>ans(n,b.m);
            for (i=0;i<n;i++){
                for (j=0;j<b.m;j++){
                    for (k=0;k<min(m,b.n);k++){
                        ans[i][j]+=a[i][k]*b[k][j];
                    }
                }
            }return ans;
        }
        
        Matrix<T> operator+(const Matrix<T> &b)const{
            int i,j;
            for (i=0;i<n;i++)for (j=0;j<m;j++)a[i][j]=a[i][j]+b[i][j];
            return a;
        }
        Matrix<T> operator-(const Matrix<T> &b)const{
            int i,j;
            for (i=0;i<n;i++)for (j=0;j<m;j++)a[i][j]=a[i][j]-b[i][j];
            return a;
        }
        /*Matrix<T> operator=(const Matrix<T> &b)const{
            int i,j;this->n=b.n;this->m=b.m;
            for (i=0;i<b.n;i++)for (j=0;j<b.m;j++)a[i][j]=b[i][j];
            return a;
        }*/
        
};
signed main(){
    int x;
    Matrix<int> a(2),b(2,3);
    Matrix<int> c=a*b;
    cout<<a[0][0]<<endl;
    return 0;
}
