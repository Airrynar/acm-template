#include<bits/stdc++.h>
using namespace std;
const double eps=1e-5;
const int N=100+10;
void print(vector<vector<double>>a){
    int n=a.size(),m=a[0].size();
    for (int i=0;i<n;i++){
        for (int j=0;j<m;j++){
            printf("%.4lf ",a[i][j]);//后面会有精度问题
        }puts("");
    }
}
void print(vector<double>a){
    int n=a.size();
    for (int i=0;i<n;i++)printf("%.4lf ",a[i]);puts("");
}
double mul(vector<double>&a,vector<double>&b){
    int n=a.size();double t=0;
    for (int i=0;i<n;i++){
        t+=a[i]*b[i];
    }
    return t;
}
vector<double> mul(vector<double>&a,vector<vector<double>>&b){
    vector<double>t;
    int n=a.size();
    for (int i=0;i<n;i++){
        double tmp=0;
        for (int j=0;j<n;j++)tmp+=a[j]*b[j][i];
        t.push_back(tmp);
    }
    return t;
}
vector<double> mul(vector<vector<double>>&a,vector<double>&b){
    vector<double>t;
    int n=a.size();
    for (int i=0;i<n;i++){
        double tmp=0;
        for (int j=0;j<n;j++)tmp+=a[i][j]*b[j];
        t.push_back(tmp);
    }
    return t;
}
vector<vector<double>> mul(vector<vector<double>>&a,vector<vector<double>>&b){
    int n=a.size();
    vector<vector<double>>t;
    for (int i=0;i<n;i++){
        vector<double>tmp;
        for (int j=0;j<n;j++){
            double r=0;
            for (int k=0;k<n;k++)r+=a[i][k]*b[k][j];
            tmp.push_back(r);
        }
        t.push_back(tmp);
    }
    return t;
}
vector<vector<double>> inv(vector<vector<double>>&a){
    vector<vector<double>>t=a,ans;
    int n=a.size(),m=2*n;
    for (int i=0;i<n;i++){
        for (int j=0;j<n;j++){
            t[i].push_back(i==j?1:0);
        }
    }
    int i,j,k,p,r;
    for (i=0,j=0;i<n&&j<m;i++,j++){
        p=i;
        for (k=i+1;k<n;k++){
            if(fabs(t[k][j])>fabs(t[p][j])+eps)p=k;
        }
        if (p!=i){
            for (k=0;k<m;k++)swap(t[p][k],t[i][k]);
        }
        if(fabs(t[i][j])<eps){
            i--;continue;
        }
        for (r=j+1;r<m;r++){
            t[i][r]/=t[i][j];
        }
        t[i][j]=1;
        for(k=0;k<n;k++){
            if(k!=i&&t[k][j]){
                double e=t[k][j];
                for(r=j;r<m;r++){
                    t[k][r]-=e*t[i][r];
                }
            }
        }
    }
    /*for (i=0;i<n;i++){
        if (fabs(t[i][i])==0){
            //不可逆
        }
    }*/
    for (i=0;i<n;i++){
        vector<double>tmp;
        for (j=n;j<m;j++){
            tmp.push_back(t[i][j]);
        }
        ans.push_back(tmp);
    }
    return ans;
}
vector<vector<double>> transpose(vector<vector<double>>&a){
    vector<vector<double>>t;
    int n=a.size(),m=a[0].size();
    for (int i=0;i<m;i++){
        vector<double>tmp;
        for (int j=0;j<n;j++){
            tmp.push_back(a[j][i]);
        }
        t.push_back(tmp);
    }
    return t;
}
int is[N];
signed main(){
    int n,m,x;
    vector<double>c,b,cB,y,xB;
    vector<int>xBn;
    vector<vector<double>>A,B,AT,Binv;
    cin>>n>>m;
    for (int i=0;i<m;i++){
        cin>>x;c.push_back(x);
    }
    for (int i=0;i<n;i++){
        vector<double>t;
        for (int j=0;j<m;j++){
            cin>>x;
            t.push_back(x);
        }
        A.push_back(t);
    }
    for (int i=0;i<n;i++){
        cin>>x;b.push_back(x);
    }
    AT=transpose(A);
    for (int i=m-n;i<m;i++){//初始可行解，要满足B^-1b>0
        B.push_back(AT[i]);
        cB.push_back(c[i]);
        is[i]=1;
        xBn.push_back(i);
    }
    B=transpose(B);
    while(1){
        Binv=inv(B);xB=mul(Binv,b);
        double mx=-0x3f3f3f3f;int p1,p2;
        vector<double> e=mul(cB,Binv);
        for (int i=0;i<m;i++){
            if (is[i])continue;
            double o=mul(e,AT[i])-c[i];
            if (mx<o+eps){
                mx=o;p1=i;
            }
        }
        if (mx<=eps){
            int cnt=0;
            vector<double>ans;
            for (int i=0;i<m;i++){
                ans.push_back(0);
            }
            for (int i=0;i<n;i++){
                ans[xBn[i]]=xB[i];
            }
            print(ans);
            return 0;
        }
        y=mul(Binv,AT[p1]);
        double mi=0x3f3f3f3f;
        for (int i=0;i<n;i++){
            if (y[i]>eps){
                if (mi>xB[i]/y[i]+eps){
                    mi=xB[i]/y[i];p2=i;
                }
            }
        }
        if (mi==0x3f3f3f3f){
            cout<<"无界解"<<endl;return 0;
        }
        B=transpose(B);
        swap(B[p2],AT[p1]);cB[p2]=c[p1];
        B=transpose(B);
        is[xBn[p2]]=0;is[p1]=1;
        xBn[p2]=p1;
    }
    return 0;
}
/*
3 5
-4 -1 0 0 0
-1 2 1 0 0 
2 3 0 1 0
1 -1 0 0 1
4 12 3
3 6
1 -2 1 0 0 0
1 1 -2 1 0 0
2 -1 4 0 1 0
-1 2 -4 0 0 1
10 8 4
2 5
-2 -1 1 0 0
1 1 2 1 0
1 4 -1 0 1
6 4
*/